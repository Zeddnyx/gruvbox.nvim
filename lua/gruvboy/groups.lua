local c = require("gruvboy.colors")

local M = {
	--
	--See :h highlight-groups
	ColorColumn = { fg = c.light0 },
	Conceal = { fg = c.light1 },
	CurSearch = { bg = c.light0, fg = c.dark0 },
	Cursor = { bg = c.light0, fg = c.dark0 },
	ICursor = { link = "Cursor" },
	CursorIM = { link = "Cursor" },
	CursorColumn = { bg = c.dark1 },
	CursorLine = { link = "CursorColumn" },
	Directory = { fg = c.green, bold = true },
	DiffAdd = { fg = c.green },
	DiffChange = { fg = c.aqua },
	DiffDelete = { fg = c.red },
	DiffText = { fg = c.yellow },
	EndOfBuffer = { link = "ColorColumn" },
	TermCursor = { link = "Cursor" },
	TermCursorNC = { link = "TermCursor" },
	ErrorMsg = { bg = c.red, fg = c.dark0 },
	WinSeparator = { fg = c.light0 },
	Folded = { fg = c.dark1 },
	FoldedColumn = { link = "Folded" },
	SignColumn = { fg = c.dark3 },
	IncSearch = { link = "CurSearch" },
	Substitute = { link = "IncSearch" },
	LineNr = { link = "SignColumn" },
	LineNrAbove = { link = "SignColumn" },
	LineNrBelow = { link = "SignColumn" },
	CursorLineNr = { link = "CursorLine" },
	CursorLineFold = { link = "SignColumn" },
	CursorLineSign = { link = "SignColumn" },
	MatchParen = { bg = c.light1, underline = true },
	ModeMsg = { fg = c.light0 },
	MsgArea = { fg = c.light0 },
	MsgSeparator = { fg = c.light1 },
	MoreMsg = { fg = c.light1 },
	NonText = { fg = c.light1 },
	Normal = { bg = c.dark0, fg = c.light0 },
	NormalFloat = { link = "Normal" },
	FloatBorder = { fg = c.light0 },
	FloatTitle = { fg = c.light0, bold = true },
	NormalNC = { link = "Normal" },
	Pmenu = { bg = c.dark0 },
	PmenuSel = { bg = c.light0, fg = c.dark0 },
	PmenuKind = { link = "Pmenu" },
	PmenuKindSel = { link = "PmenuSel" },
	PmenuExtra = { link = "Pmenu" },
	PmenuExtraSel = { link = "PmenuSel" },
	PmenuSbar = { link = "Normal" },
	PmenuThumb = { link = "PmenuSel" },
	Question = { link = "Normal" },
	QuickFixLine = { fg = c.yellow, reverse = true },
	Search = { link = "IncSearch" },
	SpecialKey = { fg = c.purple },
	SpellBad = { fg = c.light0, undercurl = true, bold = true },
	SpellCap = { link = "SpellBad" },
	SpellLocal = { link = "SpellBad" },
	SpellRare = { link = "SpellBad" },
	StatusLine = { bg = c.light0 },
	StatusLineNC = { bg = "NONE" },
	TabLine = { bg = c.dark0, fg = c.light0 },
	TabLineFill = { link = "TabLine" },
	TabLineSel = { bg = c.dark1 },
	Title = { bold = true },
	Visual = { bg = c.light1, fg = c.dark0 },
	VisualNOS = { bg = c.dark1 },
	WarningMsg = { fg = c.yellow },
	Whitespace = { fg = c.dark1 },
	WildMenu = { bg = c.dark1, fg = c.light0 },
	WinBar = { bg = c.dark0, fg = c.light0 },
	WinBarNC = { link = "WinBar" },
	--
	--See :h group-name
	Comment = { fg = c.gray },
	Constant = { fg = c.purple },
	String = { fg = c.green },
	Character = { fg = c.purple },
	Number = { fg = c.purple },
	Boolean = { fg = c.purple },
	Float = { fg = c.purple },
	Identifier = { fg = c.blue },
	Function = { fg = c.green, bold = true },
	Statement = { fg = c.red },
	Conditional = { fg = c.red },
	Repeat = { fg = c.red },
	Label = { fg = c.red },
	Operator = { fg = c.green },
	Keyword = { fg = c.red },
	Exception = { fg = c.purple },
	PreProc = { fg = c.green },
	Include = { fg = c.green },
	Define = { fg = c.green },
	Macro = { fg = c.green },
	PreCondit = { fg = c.green },
	Type = { fg = c.yellow },
	StorageClass = { fg = c.orange },
	Structure = { fg = c.green },
	TypeDef = { fg = c.yellow },
	Special = { fg = c.orange },
	SpecialChar = { fg = c.purple },
	Tag = { fg = c.red },
	SpecialComment = { fg = c.red },
	Debug = { fg = c.red },
	Underline = { underline = true },
	Error = { fg = c.red, undercurl = true },
	Todo = { fg = c.dark0, bg = c.light0 },
	--
	--See :h lsp-highlight
	--LspReferenceText={},
	--LspReferenceRead={},
	--LspReferenceWrite={},
	--
	--See :h diagnostic-highlights
	DiagnosticError = { fg = c.red, undercurl = true },
	DiagnosticWarn = { fg = c.yellow, underline = true },
	DiagnosticInfo = { fg = c.blue, underline = true },
	DiagnosticHint = { fg = c.aqua, underline = true },
	DiagnosticSignError = { fg = c.red },
	DiagnosticSignWarn = { fg = c.yellow },
	DiagnosticSignInfo = { fg = c.blue },
	DiagnosticSignHint = { fg = c.aqua },
	DiagnosticVirtualTextError = { fg = c.red },
	DiagnosticVirtualTextWarn = { fg = c.yellow },
	DiagnosticVirtualTextInfo = { fg = c.blue },
	DiagnosticVirtualTextHint = { fg = c.aqua },
	--
	--See :h treesitter-highlight-groups
	["@text.literal"] = { link = "Comment" },
	["@text.reference"] = { link = "Identifier" },
	["@text.title"] = { link = "Title" },
	["@text.uri"] = { link = "Underlined" },
	["@text.underline"] = { link = "Underlined" },
	["@text.todo"] = { link = "Todo" },
	["@comment"] = { link = "Comment" },
	["@punctuation"] = { link = "Delimiter" },
	["@constant"] = { link = "Constant" },
	["@constant.builtin"] = { link = "Special" },
	["@constant.macro"] = { link = "Define" },
	["@define"] = { link = "Define" },
	["@macro"] = { link = "Macro" },
	["@string"] = { link = "String" },
	["@string.escape"] = { link = "SpecialChar" },
	["@string.special"] = { link = "SpecialChar" },
	["@character"] = { link = "Character" },
	["@character.special"] = { link = "SpecialChar" },
	["@number"] = { link = "Number" },
	["@boolean"] = { link = "Boolean" },
	["@float"] = { link = "Float" },
	["@function"] = { link = "Function" },
	["@function.builtin"] = { link = "Special" },
	["@function.macro"] = { link = "Macro" },
	["@parameter"] = { link = "Identifier" },
	["@method"] = { link = "Function" },
	["@field"] = { link = "Identifier" },
	["@property"] = { link = "Identifier" },
	["@constructor"] = { link = "Special" },
	["@conditional"] = { link = "Conditional" },
	["@repeat"] = { link = "Repeat" },
	["@label"] = { link = "Label" },
	["@operator"] = { link = "Operator" },
	["@keyword"] = { link = "Keyword" },
	["@exception"] = { link = "Exception" },
	["@variable"] = { link = "Identifier" },
	["@type"] = { link = "Type" },
	["@type.definition"] = { link = "Typedef" },
	["@storageclass"] = { link = "StorageClass" },
	["@structure"] = { link = "Structure" },
	["@namespace"] = { link = "Identifier" },
	["@include"] = { link = "Include" },
	["@preproc"] = { link = "PreProc" },
	["@debug"] = { link = "Debug" },
	["@tag"] = { link = "Tag" },
	--
	--See :h cmp-highlight
	CmpItemAbbr = { bg = c.dark0, fg = c.light0 },
	CmpItemAbbrDeprecated = { bg = c.dark0, fg = c.light3 },
	CmpDocumentation = { link = "NormalFloat" },
	CmpDocumentationBorder = { link = "FloatBorder" },
	--
	--See :h gitsigns-highlight-groups
	GitSignAdd = { link = "DiffAdd" },
	GitSignChange = { link = "DiffChange" },
	GitSignDelete = { link = "DiffDelete" },
	--
	--See telescope.nvim/plugin/telescope.lua
	TelescopeSelection = { bg = c.light0, fg = c.dark0 },
	TelescopeSelectionCaret = { bg = c.light0, fg = c.dark0 },
	TelescopeMultiSelection = { fg = c.light0, bold = true },
	TelescopeNormal = { link = "NormalFloat" },
	TelescopeBorder = { link = "FloatBorder" },
	TelescopePreviewBorder = { link = "FloatBorder" },
	TelescopePromptBorder = { link = "FloatBorder" },
	TelescopeResultsBorder = { link = "FloatBorder" },
	TelescopePromptPrefix = { fg = c.light0 },
	TelescopeMatching = { bg = c.light0, fg = c.dark0, bold = true },
	--
	--See :h translator-highlight
	TranslatorBorder = { link = "FloatBorder" },
	--
	--See :h neo-tree-highlight
	NeoTreeTabInactive = { bg = c.dark0, fg = c.dark3, bold = true },
	NeoTreeTabActive = { bg = c.dark0, fg = c.light0, bold = true },
	NeoTreeTabSeparatorActive = { bg = c.dark0, fg = c.dark0 },
	NeoTreeTabSeparatorInactive = { link = "NeoTreeTabSeparatorActive" },
	--
	--See treesitter-playground
	cssBraces = { fg = c.blue },
	cssFunctionName = { fg = c.yellow },
	cssIdentifier = { fg = c.orange },
	cssClassName = { fg = c.green },
	cssColor = { fg = c.blue },
	cssSelectorOp = { fg = c.blue },
	cssSelectorOp2 = { fg = c.blue },
	cssImportant = { fg = c.green },
	cssVendor = { fg = c.light0 },
	cssTextProp = { fg = c.aqua },
	cssAnimationProp = { fg = c.aqua },
	cssUIProp = { fg = c.yellow },
	cssTransformProp = { fg = c.aqua },
	cssTransitionProp = { fg = c.aqua },
	cssPrintProp = { fg = c.aqua },
	cssPositioningProp = { fg = c.yellow },
	cssBoxProp = { fg = c.aqua },
	cssFontDescriptorProp = { fg = c.aqua },
	cssFlexibleBoxProp = { fg = c.aqua },
	cssBorderOutlineProp = { fg = c.aqua },
	cssBackgroundProp = { fg = c.aqua },
	cssMarginProp = { fg = c.aqua },
	cssListProp = { fg = c.aqua },
	cssTableProp = { fg = c.aqua },
	cssFontProp = { fg = c.aqua },
	cssPaddingProp = { fg = c.aqua },
	cssDimensionProp = { fg = c.aqua },
	cssRenderProp = { fg = c.aqua },
	cssColorProp = { fg = c.aqua },
	cssGeneratedContentProp = { fg = c.aqua },
	--
	--See treesitter-playground
	goDirective = { fg = c.aqua },
	goConstants = { fg = c.purple },
	goDeclaration = { fg = c.red },
	goDeclType = { fg = c.blue },
	goBuiltins = { fg = c.orange },
	goParen = { fg = c.purple },
	--
	--See treesitter-playground
	htmlTag = { fg = c.aqua, bold = true },
	htmlEndTag = { fg = c.aqua, bold = true },
	htmlTagName = { fg = c.blue },
	htmlArg = { fg = c.orange },
	htmlScriptTag = { fg = c.purple },
	htmlTagN = { fg = c.light0 },
	htmlSpecialTagName = { fg = c.blue },
	htmlSpecialChar = { fg = c.red },
	htmlLink = { fg = c.fg4, underline = true },
	htmlBold = { fg = c.light0, bold = true },
	htmlBoldUnderline = { fg = c.light0, bold = true, underline = true },
	htmlBoldItalic = { fg = c.light0, bold = true },
	htmlBoldUnderlineItalic = { fg = c.light0, bold = true },
	htmlItalic = { fg = c.light0, italic = true },
	--
	--See treesitter-playground
	javaScriptBraces = { fg = c.light0 },
	javaScriptFunction = { fg = c.aqua },
	javaScriptIdentifier = { fg = c.red },
	javaScriptMember = { fg = c.blue },
	javaScriptNumber = { fg = c.purple },
	javaScriptNull = { fg = c.purple },
	javaScriptParens = { fg = c.light1 },
	javascriptImport = { fg = c.aqua },
	javascriptExport = { fg = c.aqua },
	javascriptClassKeyword = { fg = c.aqua },
	javascriptClassExtends = { fg = c.aqua },
	javascriptDefault = { fg = c.aqua },
	javascriptClassName = { fg = c.yellow },
	javascriptClassSuperName = { fg = c.yellow },
	javascriptGlobal = { fg = c.yellow },
	javascriptEndColons = { fg = c.light0 },
	javascriptFuncArg = { fg = c.light0 },
	javascriptGlobalMethod = { fg = c.light0 },
	javascriptNodeGlobal = { fg = c.light0 },
	javascriptBOMWindowProp = { fg = c.light0 },
	javascriptArrayMethod = { fg = c.light0 },
	javascriptArrayStaticMethod = { fg = c.light0 },
	javascriptCacheMethod = { fg = c.light0 },
	javascriptDateMethod = { fg = c.light0 },
	javascriptMathStaticMethod = { fg = c.light0 },
	javascriptProp = { fg = c.light0 },
	javascriptURLUtilsProp = { fg = c.light0 },
	javascriptBOMNavigatorProp = { fg = c.light0 },
	javascriptDOMDocMethod = { fg = c.light0 },
	javascriptDOMDocProp = { fg = c.light0 },
	javascriptBOMLocationMethod = { fg = c.light0 },
	javascriptBOMWindowMethod = { fg = c.light0 },
	javascriptStringMethod = { fg = c.light0 },
	javascriptVariable = { fg = c.orange },
	javascriptClassSuper = { fg = c.orange },
	javascriptFuncKeyword = { fg = c.aqua },
	javascriptAsyncFunc = { fg = c.aqua },
	javascriptClassStatic = { fg = c.orange },
	javascriptOperator = { fg = c.red },
	javascriptForOperator = { fg = c.red },
	javascriptYield = { fg = c.red },
	javascriptExceptions = { fg = c.red },
	javascriptMessage = { fg = c.red },
	javascriptTemplateSB = { fg = c.aqua },
	javascriptTemplateSubstitution = { fg = c.light0 },
	javascriptLabel = { fg = c.light0 },
	javascriptObjectLabel = { fg = c.light0 },
	javascriptPropertyName = { fg = c.light0 },
	javascriptLogicSymbols = { fg = c.light0 },
	javascriptArrowFunc = { fg = c.yellow },
	javascriptDocParamName = { fg = c.fg4 },
	javascriptDocTags = { fg = c.fg4 },
	javascriptDocNotation = { fg = c.fg4 },
	javascriptDocParamType = { fg = c.fg4 },
	javascriptDocNamedParamType = { fg = c.fg4 },
	javascriptBrackets = { fg = c.light0 },
	javascriptDOMElemAttrs = { fg = c.light0 },
	javascriptDOMEventMethod = { fg = c.light0 },
	javascriptDOMNodeMethod = { fg = c.light0 },
	javascriptDOMStorageMethod = { fg = c.light0 },
	javascriptHeadersMethod = { fg = c.light0 },
	javascriptAsyncFuncKeyword = { fg = c.red },
	javascriptAwaitFuncKeyword = { fg = c.red },
	jsClassKeyword = { fg = c.aqua },
	jsExtendsKeyword = { fg = c.aqua },
	jsExportDefault = { fg = c.aqua },
	jsTemplateBraces = { fg = c.aqua },
	jsGlobalNodeObjects = { fg = c.blue },
	jsGlobalObjects = { fg = c.blue },
	jsObjectKey = { fg = c.gree, bold = true },
	jsFunction = { fg = c.aqua },
	jsFuncCall = { fg = c.blue },
	jsFuncParens = { fg = c.light1 },
	jsParens = { fg = c.light1 },
	jsNull = { fg = c.purple },
	jsUndefined = { fg = c.purple },
	jsClassDefinition = { fg = c.yellow },
	jsOperatorKeyword = { fg = c.red },
	--
	--See treesitter-playground
	markdownItalic = { fg = c.light1 },
	markdownH1 = { fg = c.green, bold = true },
	markdownH2 = { fg = c.green, bold = true },
	markdownH3 = { fg = c.yellow, bold = true },
	markdownH4 = { fg = c.yellow, bold = true },
	markdownH5 = { fg = c.yellow },
	markdownH6 = { fg = c.yellow },
	markdownCode = { fg = c.aqua },
	markdownCodeBlock = { fg = c.aqua },
	markdownCodeDelimiter = { fg = c.aqua },
	markdownBlockquote = { fg = c.gray },
	markdownListMarker = { fg = c.gray },
	markdownOrderedListMarker = { fg = c.gray },
	markdownRule = { fg = c.gray },
	markdownHeadingRule = { fg = c.gray },
	markdownUrlDelimiter = { fg = c.light1 },
	markdownLinkDelimiter = { fg = c.light1 },
	markdownLinkTextDelimiter = { fg = c.light1 },
	markdownHeadingDelimiter = { fg = c.orange },
	markdownUrl = { fg = c.purple },
	markdownUrlTitleDelimiter = { fg = c.green },
	markdownLinkText = { fg = c.gray, underline = true },
	markdownIdDeclaration = { fg = c.gray, underline = true },
	--
	--See treesitter-playground
	pythonBuiltin = { fg = c.orange },
	pythonBuiltinObj = { fg = c.orange },
	pythonBuiltinFunc = { fg = c.orange },
	pythonFunction = { fg = c.aqua },
	pythonDecorator = { fg = c.red },
	pythonInclude = { fg = c.blue },
	pythonImport = { fg = c.blue },
	pythonRun = { fg = c.blue },
	pythonCoding = { fg = c.blue },
	pythonOperator = { fg = c.red },
	pythonException = { fg = c.red },
	pythonExceptions = { fg = c.purple },
	pythonBoolean = { fg = c.purple },
	pythonDot = { fg = c.light1 },
	pythonConditional = { fg = c.red },
	pythonRepeat = { fg = c.red },
	pythonDottedName = { fg = c.green, bold = true },
}
return M
